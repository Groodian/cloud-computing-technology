- hosts: masters
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: configure kubectl
      become: yes
      become_user: kube
      shell: |
              mkdir -p $HOME/.kube
              sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
              sudo chown $(id -u):$(id -g) $HOME/.kube/config
        
    - name: install helm
      become: yes
      become_user: kube
      shell: |
              curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
              sudo apt-get install apt-transport-https --yes
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
              sudo apt-get update
              sudo apt-get install helm
    
    - name: deploy a pod network
      become: yes
      become_user: kube
      shell: |
              helm repo add cilium https://helm.cilium.io/
              helm install cilium cilium/cilium --version 1.12.5 --namespace kube-system
              CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/master/stable.txt)
              CLI_ARCH=amd64
              if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
              sudo curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
              sudo sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
              sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
              sudo rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}


    - name: get the token for joining the worker nodes
      become: yes
      become_user: kube
      shell: kubeadm token create --print-join-command
      register: kubernetes_join_command

    - name: copy join command to local file
      become: false
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command"


    
#    - name: Add Repos
#      become: yes
#      become_user: kube
#      shell: |
#               helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
#               helm repo add grafana https://grafana.github.io/helm-charts
#               helm repo update

#    - name: install prometheus and grafana
#      become: yes
#      become_user: kube
#      shell: |
#               helm install prometheus prometheus-community/prometheus
#               helm install grafana grafana/grafana
#               kubectl expose service grafana --type=NodePort --target-port=30000 --name=grafana-ext
